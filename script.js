let ゲーム盤の列の数 = 6;
let ゲーム盤の行の数 = 6;
let 当たり;           // ゲーム盤上の当たりを表す変数
let 開いたマス;       // ゲーム盤上の開いたマスを表す変数
let くじを引ける回数; // くじを引ける残り回数
let 当たった回数;     // 当たりを引いた回数

window.onload = function () {
  for (let y = 0; y < ゲーム盤の行の数; y += 1) {
    表のy行目を挿入する(y);
  }
  // リセットボタンをクリックした時にゲーム初期化処理を呼び出すようにする
  document.getElementById("リセットボタン").onclick = ゲーム初期化処理;
  // ウェブページを読み込んだ時（window.onload)にゲーム初期化処理を呼び出す
  ゲーム初期化処理();
};

function 表のy行目を挿入する(y) {
  let 表の要素オブジェクト = document.getElementById("ゲーム盤");
  let 行の要素オブジェクト, セルの要素オブジェクト;

  行の要素オブジェクト = document.createElement("tr");
  表の要素オブジェクト.appendChild(行の要素オブジェクト);
  for (let x = 0; x < ゲーム盤の列の数; x += 1) {
    セルの要素オブジェクト = document.createElement("td");
    セルの要素オブジェクト.onclick = function () {
      クリック処理(x, y);
    };
    セルの要素オブジェクト.id = `${x},${y}`;
    行の要素オブジェクト.appendChild(セルの要素オブジェクト);
  }
}

function クリック処理(x, y) {
  // くじを引ける回数が残っているかどうかのチェック
  if (くじを引ける回数 !== 0) {
    // 既に x, y のマスが開かれているかどうかのチェック
    if (開いたマス[x][y] === false) {
      // マスを開く
      開いたマス[x][y] = true;
      // くじを引ける回数を1回分減らす
      くじを引ける回数 -= 1;
      // 当たりを引いたかどうかをチェックする
      if (当たり[x][y] === true) {
        // 当たっていた場合は、その回数を1回分増やす
        当たった回数++;
      }
    }
    // ゲーム盤の表示を更新する関数を呼び出す
    ゲーム盤の表示の更新();
  }
}

// ゲームを新しく開始する際の初期化処理を行う関数
function ゲーム初期化処理() {
  // ゲーム盤上の当たりをすべてクリアする。開いたマスも同様にクリアする
  //当たりと開いたマスを空の配列で初期化する
  当たり = [];
  開いたマス = [];
  // 各列に対する繰り返し処理を行う
  for (let x = 0; x < ゲーム盤の列の数; x++) {
    // x列の要素に空の配列を代入する
    当たり[x] = [];
    開いたマス[x] = [];
    // x列目の各行に対する繰り返し処理を行う
    for (let y = 0; y < ゲーム盤の行の数; y++) {
      // 全ての(x, y) の組み合わせで下記のプログラムが実行される
      // 結果としてゲーム盤の全てのマスの「当たり」と「開いたマス」が false になる
      当たり[x][y] = false;
      開いたマス[x][y] = false;
    }
  }

  // 当たりの数を設定設定する
  let 当たりの数 = 15;
  let 配置した当たりの数 = 0;
  // 当たりの数だけ、ランダムに当たりを配置する
  while (配置した当たりの数 < 当たりの数) {
    // 当たりを配置するマスの場所をサイコロを振って決める
    let x = サイコロを振る(ゲーム盤の列の数) - 1;
    let y = サイコロを振る(ゲーム盤の行の数) - 1;
    // 既に当たりが（x, y）に配置済かどうかをチェックする
    if (当たり[x][y] === false) {
      // 配置済でなければ、配置し、「配置した当たりの数」数を1増やす
      当たり[x][y] = true;
      配置した当たりの数++;
    }
  }

  // くじを引ける残り回数を「3」でリセットする  
  くじを引ける回数 = 5;
  // 当たりを引いた回数を「0」でリセットする
  当たった回数 = 0;

  // ゲーム盤の表示を更新する
  ゲーム盤の表示の更新();
}

//  ゲーム盤の表示を更新更新する
function ゲーム盤の表示の更新() {
  // 繰り返しを入れ子にすることで、全てのマスに対して繰り返す
  for (let x = 0; x < ゲーム盤の列の数; x++) {
    for (let y = 0; y < ゲーム盤の行の数; y++) {
      // この中は、全ての(x, y)に対して1回ずつ実行される
      // (x, y)のマスの要素オブジェクトを取得する
      let 要素オブジェクト = document.getElementById(`${x},${y}`);
      let 背景色;
      let メッセージ;
      // (x, y) のマスが開いているかどうかをチェックする.
      if (開いたマス[x][y] === false) {
        // マスが開いていなければ薄い灰色で塗りつぶす
        メッセージ = '';
        背景色 = 'lightgray';
      }
      else {
        // マスが開いている場合の処理
        // (x, y) のマスに当たりがなければ、そのマスを白で塗りつぶす
        if (当たり[x][y] === false) {
          メッセージ = '外れ';
          背景色 = 'white';
        }
        // そうでなければ、そのマスを水色で塗りつぶし、「当たり！」を表示する
        else {
          メッセージ = '当たり!';
          背景色 = 'skyblue';
        }
      }
      要素オブジェクト.style.backgroundColor = 背景色;
      要素オブジェクト.innerHTML = メッセージ;
    }
  }

  // 上部に表示するメッセージを作り、表示する
  let メッセージ要素 = document.getElementById("メッセージ");
  let メッセージ;
  // くじを引ける回数0になった時のメッセージの一覧を
  // 「当たりを引いた回数」を配列の「添え字」に対応させた配列で記憶する
  let メッセージ一覧 = [
    '逆にすごい。すべて外れました…残念。',
    'あなたの結果は、5等賞です。',
    'あなたの結果は、４等賞です。',
    'あなたの結果は、３等賞です。',
    '惜しい！あなたの結果は、２等賞です。',
    'おめでとうございます！１等賞！大当たり！',
  ];

  // くじを引ける回数をチェックする
  if (くじを引ける回数 !== 0) {
    // くじを引ける回数が残っている場合のメッセージを作成作成する
    メッセージ = 'あと' + くじを引ける回数 + '回引けます。好きなパネルを選んでください'
  }
  else {
    // くじを引ける回数が残っていない場合は、当たりを引いた数に
    // 応じたメッセージを作成する
    メッセージ = メッセージ一覧[当たった回数];
  }
  // 作成したメッセージを画面に表示する
  メッセージ要素.innerHTML = メッセージ;
}

// 1から「出目の最大値」までの整数の乱数を返す関数
function サイコロを振る(出目の最大値) {
  return Math.floor(Math.random() * 出目の最大値) + 1;
}